services:
  nginx:
    build:
      context: .
      dockerfile: ./.coolify/nginx/Dockerfile
    volumes:
      - ./backend:/var/www/html/backend
      - ./frontend:/var/www/html/frontend
    networks:
      - internal
    depends_on:
      php:
        condition: service_started
      frontend:
        condition: service_started
      db:
        condition: service_healthy  

  php:
    build:
      context: .
      dockerfile: ./.coolify/php/Dockerfile
    volumes:
      - ./backend:/var/www/html/backend
    networks:
      - internal
    environment:
      DB_HOST: db
      DB_NAME: db
      DB_USER: db
      DB_PASS: db
    depends_on:
      db:
        condition: service_healthy 

  frontend:
    build:
      context: .
      dockerfile: ./.coolify/node/Dockerfile
    environment:
      - PORT=3000
      - HOST=0.0.0.0
    expose:
      - "3000"
    networks:
      - internal

  db:
    image: mysql:8.4
    environment:
      MYSQL_DATABASE: db
      MYSQL_USER: db
      MYSQL_PASSWORD: db
      MYSQL_ROOT_PASSWORD: db
    volumes:
      - dbdata:/var/lib/mysql
      - ./.coolify/mysql-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootsecret"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks:
      - internal

networks:
  internal:
    driver: bridge

volumes:
  dbdata: {}  

